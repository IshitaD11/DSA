/* 844. Backspace String Compare

Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.

Note that after backspacing an empty text, the text will continue empty.

 

Example 1:

Input: s = "ab#c", t = "ad#c"
Output: true
Explanation: Both s and t become "ac".
Example 2:

Input: s = "ab##", t = "c#d#"
Output: true
Explanation: Both s and t become "".
Example 3:

Input: s = "a#c", t = "b"
Output: false
Explanation: s becomes "c" while t becomes "b".
 

Constraints:

1 <= s.length, t.length <= 200
s and t only contain lowercase letters and '#' characters.
 

Follow up: Can you solve it in O(n) time and O(1) space? */

class Solution {
    public boolean backspaceCompare(String s, String t) {
        
        StringBuilder sb = new StringBuilder();
        for(int i=0;i<s.length();i++)
        {
            if(s.charAt(i)=='#')
            {   
                 if(sb.length()>0)
                    sb.deleteCharAt(sb.length()-1);
            }
            else
                sb.append(s.charAt(i));
            // System.out.println(sb.toString());
        }

        StringBuilder sb1 = new StringBuilder();
        for(int i=0;i<t.length();i++)
        {
            if(t.charAt(i)=='#')
            {    
                if(sb1.length()>0)
                    sb1.deleteCharAt(sb1.length()-1);
            }
            else
                sb1.append(t.charAt(i));
            // System.out.println(sb1.toString());
        }

        if(sb.length()==0 && sb1.length()==0)
            return true;
        if(sb.toString().equals(sb1.toString()))
            return true;
        return false;
    }
}
