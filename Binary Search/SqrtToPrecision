/* Find square root of a number to a given given precision point */
//--------------------------------------------------------------------------------------------------------------------------------
package BinarySearch;

import java.util.Scanner;

public class Sqrt {
	public static int intSqrt(int x) {
        long s=0;
        long e = (x);
        long mid = s+(e-s)/2;
        int ans=0;
        while(s<=e)
        {
            long sqr = mid*mid;
            if(sqr < x)
            {
                s=mid+1;
                ans=(int)mid;
            }
            else if(sqr>x)
            {
                e=mid-1;
            }
            else if(sqr==x)
                return (int)mid;
            mid = s+(e-s)/2;
        }
        return ans;
    }
	
	public static double morePrecision(int n, int prcn,int intsol)
	{
		
		double ans = 0;
		float factor=1;
		for(int i = 0 ;i<prcn;i++)
		{
			float temp = intsol;
			factor = factor/10;
			System.out.println("factor:"+factor);
			
			for(double j = 1; j<9 ;j++)
			{
				temp = temp+factor;
				System.out.println("Temp:"+temp);
				if((temp*temp)>n)
				{
					temp=temp-factor;
					break;
				}
			}
			ans = temp;
		}
		return ans;
	}
	
	public static void main (String []args)
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the No:");
		int n = sc.nextInt();
		System.out.println("Enter Precision:");
		int prcn = sc.nextInt();
		int sqrtInt = intSqrt(n);
		double sqrt = morePrecision(n,prcn,sqrtInt);
		System.out.println("Ans:"+sqrt);
	}

}
