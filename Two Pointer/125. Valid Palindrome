/* 125. Valid Palindrome

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters. */

class Solution {
    public boolean isPalindrome(String s) {
        // two pointers from left and right
        int l=0;
        int r=s.length()-1;
        
        while(l<=r)
        {
            Character left = s.charAt(l);
            Character right = s.charAt(r);
            
            if(left>='A' && left<='Z')
                left=Character.toLowerCase(left);
            else if(left<'0' || (left>'9' && left<'a') || left>'z')
            {
                l++;
                continue;
            }    
            
            if(right>='A' && right<='Z')
                right=Character.toLowerCase(right);
            else if(right<'0' || (right>'9' && right<'a') || right>'z')
            {
                r--;
                continue;
            } 
            
            if(left.equals(right))
            {
                l++;r--;
                continue;
            }
            else
                return false;
        }
        return true;
    }
}
