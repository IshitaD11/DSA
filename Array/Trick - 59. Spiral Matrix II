/* Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order. 

Example 1:

Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]

Constraints:

1 <= n <= 20 */
//----------------------------------------------------------------------------------------------------------------------------------------------

class Solution {
    public int[][] generateMatrix(int n) {
        int[][] ans=new int[n][n];
        int start=0;
        int end=n-1;
        int num=1;

        /* example 2D array >> ODD and Even
        00 01 02    00 01 02 03
        10 11 12    10 11 12 13
        20 21 22    20 21 22 23
                    30 31 32 33 */

        while(start<=end)
        {
            //top row >> 00 01 02 03 
            for(int i=start;i<=end;i++)
            {
                ans[start][i]=num++;
            }

            //if there is only 1 row left, it will be already captured in top row, no need to continue >> it would be the mid point of odd length Matrix >> 11 / 22 / 33
            if(start==end)
                break;

            //right column >> 03 13 23 33
            for(int i=start+1;i<=end;i++)
            {
                ans[i][end]=num++;
            }

            //bottom row >> start from right to left >> 33 32 31 30
            for(int i=end-1;i>=start;i--)
            {
                ans[end][i]=num++;
            }

            //left column, end before i==start, as it is already considered in top row
            for(int i=end-1;i>start;i--)
            {
                ans[i][start]=num++;
            }

            start++; end--;
        }
        return ans;
    }
}
